install.packages("RWeka")
library(RWeka)
library(rJava)
library(RWeka)
library(RWeka)
subject_name <- c("John Doe", "Jane Doe", "Steve Graves")
temperature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
temperature[2]
## examples of accessing items in vector
# include items in the range 2 to 3
temperature[2:3]
# exclude item 2 using the minus sign
temperature[-2]
gender <- factor(c("MALE", "FEMALE", "MALE"))
gender
blood <- factor(c("O", "AB", "A"),
levels = c("A", "B", "AB", "O"))
blood
subject_name[1]
temperature[1]
flu_status[1]
gender[1]
blood[1]
subject1 <- list(fullname = subject_name[1],
temperature = temperature[1],
flu_status = flu_status[1],
gender = gender[1],
blood = blood[1])
View(subject1)
subject1
subject1[2]
subject1[c("temperature", "flu_status")]
pt_data <- data.frame(subject_name, temperature, flu_status, gender,
blood, stringsAsFactors = FALSE)
pt_data
pt_data$subject_name
pt_data[c("temperature", "flu_status")]
pt_data[c(1, 3), c(2, 4)]
pt_data[, 1]
pt_data[1, ]
pt_data[ , ]
pt_data[c(1, 3), c("temperature", "gender")]
pt_data[-2, c(-1, -3, -5)]
m <- matrix(c('a', 'b', 'c', 'd'), nrow = 2)
m
usedcars <- read.csv("usedcars.csv", stringsAsFactors = FALSE)
library(readr)
usedcars <- read_csv("Desktop/ML with R/chapter 2/usedcars.csv")
View(usedcars)
str(usedcars)
View(usedcars)
View(usedcars)
# summarize numeric variables
summary(usedcars$year)
summary(usedcars[c("price", "mileage")])
View(usedcars)
View(usedcars)
range(usedcars$price)
diff(range(usedcars$price))
IQR(usedcars$price)
quantile(usedcars$price)
quantile(usedcars$price, seq(from = 0, to = 1, by = 0.20))
boxplot(usedcars$price, main="Boxplot of Used Car Prices",
ylab="Price ($)")
boxplot(usedcars$mileage, main="Boxplot of Used Car Mileage",
ylab="Odometer (mi.)")
hist(usedcars$price, main = "Histogram of Used Car Prices",
xlab = "Price ($)")
hist(usedcars$mileage, main = "Histogram of Used Car Mileage",
xlab = "Odometer (mi.)")
var(usedcars$price)
sd(usedcars$price)
var(usedcars$mileage)
sd(usedcars$mileage)
table(usedcars$year)
table(usedcars$model)
table(usedcars$color)
model_table <- table(usedcars$model)
prop.table(model_table)
color_table <- table(usedcars$color)
color_pct <- prop.table(color_table) * 100
round(color_pct, digits = 1)
plot(x = usedcars$mileage, y = usedcars$price,
main = "Scatterplot of Price vs. Mileage",
xlab = "Used Car Odometer (mi.)",
ylab = "Used Car Price ($)")
# new variable indicating conservative colors
usedcars$conservative <-
usedcars$color %in% c("Black", "Gray", "Silver", "White")
table(usedcars$conservative)
CrossTable(x = usedcars$model, y = usedcars$conservative)
install.packages("gmodels")
CrossTable(x = usedcars$model, y = usedcars$conservative)
library(gmodels)
CrossTable(x = usedcars$model, y = usedcars$conservative)
#Load data
setwd("~/Kaggle/MNIST")
mnist <- read.csv("./Data/train.csv")
mnist$label <- factor(mnist$label)
table(mnist$label)
# PCA
mn_pix <- mnist[, -1]
mn_label <- mnist$label
mn_pca <- prcomp(mn_pix)
plot(mn_pca, type = "l")
summary(mn_pca)
mnist <- as.data.frame(mn_pca$x)
mnist <- mnist[, 1:100]
mnist$label <- mn_label
#Split dataset
mnist_train <- mnist[1:21000, ]
table(mnist_train$label)
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
table(mnist_test$label)
mnist_test_lbl <- mnist_test$label
#Validate model
library(class)
mnist_pred <- knn(train = mnist_train, test = mnist_test, cl = mnist_train_lbl, k =145) # sqrt(21000) = 145
#Evaluate model
library(gmodels)
CrossTable(x = mnist_test_lbl, y=mnist_pred, prop.c=FALSE,prop.t=FALSE)
#Clear Environment
rm("mn_pix","mnist","mn_label","mnist_test_lbl","mnist_pred","mnist_test")
#Classify test dataset
mnist_test <- read.csv("./Data/test.csv")
mnist_test <- predict(mn_pca, mnist_test)
mnist_test <- as.data.frame(mnist_test)
mnist_test <- mnist_test[, 1:100]
mnist_pred <- knn(train = mnist_train[,-101], test = mnist_test, cl = mnist_train_lbl, k =145)
result <- data.frame(Label=mnist_pred)
library(dplyr)
result <- mutate(result, ImageId = rownames(result))
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
#Load data
setwd("~/Kaggle/MNIST")
mnist_train <- read.csv("./Data/train.csv")
mnist_train$label <- factor(mnist_train$label)
# PCA
mn_pix <- mnist_train[, -1]
#Load data
setwd("~/Kaggle/MNIST")
mnist_train <- read.csv("./Data/train.csv")
mnist_train$label <- factor(mnist_train$label)
# PCA
mn_pix <- mnist_train[, -1]
mn_label <- mnist_train$label
mn_pca <- prcomp(mn_pix)
plot(mn_pca, type = "l")
summary(mn_pca)
mnist_train <- as.data.frame(mn_pca$x)
mnist_train <- mnist_train[, 1:50]
#Classify test dataset
mnist_test <- read.csv("./Data/test.csv")
mnist_test <- predict(mn_pca, mnist_test)
mnist_test <- as.data.frame(mnist_test)
mnist_test <- mnist_test[, 1:50]
mnist_pred <- knn(train = mnist_train, test = mnist_test, cl = mn_label, k = 205)
result <- data.frame(Label = mnist_pred)
library(dplyr)
result <- mutate(result, ImageId = rownames(result))
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
mnist_pred <- knn(train = mnist_train, test = mnist_test, cl = mn_label, k = 150)
#Save predictions
result <- data.frame(Label = mnist_pred)
result <- mutate(result, ImageId = rownames(result))
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
mnist_pred <- knn(train = mnist_train, test = mnist_test, cl = mn_label, k = 100)
#Save predictions
result <- data.frame(Label = mnist_pred)
result <- mutate(result, ImageId = rownames(result))
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
#Load data
setwd("~/Kaggle/MNIST/MNIST-Digit-Recognition/")
mnist_train <- read.csv("./Data/train.csv")
#Load data
setwd("~/Kaggle/MNIST/MNIST-Digit-Recognition/")
mnist <- read.csv("./Data/train.csv")
