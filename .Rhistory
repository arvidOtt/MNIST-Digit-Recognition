mnist_test <- as.data.frame(mnist_test)
#Classify test dataset
mnist_test <- read.csv("./Data/test.csv")
mnist_test <- predict(mn_pca, mnist_test)
mnist_test <- as.data.frame(mnist_test)
mnist_test <- mnist_test[, 1:50]
mnist_result <- compute(mnist_model, mnist_test)
mnist_pred <- mnist_result$net.result
#Save predictions
result <- data.frame(Label = mnist_pred)
result <- mutate(result, ImageId = rownames(result))
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
View(result)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- model_result$net.result
cor(predicted,mnist_train_lbl)
mnist <- as.data.frame(mn_pca$x)
mnist["label"] <- mnist[, 1:50]
mnist$label <- mn_label
for(i in c(0:9)) {
mnist[paste("l",i)] <- 0
if(mnist$label = i) {
mnist[paste("l",i)] <- 1
}
}
for(i in c(0:9)) {
mnist[paste("l",i)] <- 0
if(mnist$label == i) {
mnist[paste("l",i)] <- 1
}
}
mnist <- as.data.frame(mn_pca$x)
mnist <- mnist[, 1:50]
mnist$label <- mn_label
for(i in c(0:9)) {
mnist[paste("l",i)] <- 0
if(mnist$label == i) {
mnist[paste("l",i)] <- 1
}
}
View(mnist)
for(i in c(0:9)) {
mnist[paste("l",i, collapse = "")] <- 0
if(mnist$label == i) {
mnist[paste("l",i, collapse = "")] <- 1
}
}
for(i in c(0:9)) {
mnist[paste("l",i, collapse = "")] <- 0
if(mnist["label"] == i) {
mnist[paste("l",i, collapse = "")] <- 1
}
}
mnist[paste("l",i, collapse = "")] <- 1
mnist <- as.data.frame(mn_pca$x)
mnist <- mnist[, 1:50]
mnist$label <- mn_label
# Binarize the categorical output
mnist <- cbind(mnist, mnist$label == 1)
mnist <- cbind(mnist, mnist$label == 2)
mnist <- cbind(mnist, mnist$label == 3)
mnist <- as.data.frame(mn_pca$x)
mnist <- mnist[, 1:50]
mnist$label <- mn_label
# Binarize the categorical output
for(i in c(0:9)) {
mnist <- cbind(mnist, mnist$label == i)
}
names(iristrain)[51:61] <- c('null', 'eins', 'zwei','drei','vier','fuenf','sechs','sieben','acht','neun')
names(mnist)[51:61] <- c('null', 'eins', 'zwei','drei','vier','fuenf','sechs','sieben','acht','neun')
mnist <- as.data.frame(mn_pca$x)
mnist <- mnist[, 1:50]
mnist$label <- mn_label
# Binarize the categorical output
for(i in c(0:9)) {
mnist <- cbind(mnist, mnist$label == i)
}
names(mnist)[52:61] <- c('null', 'eins', 'zwei','drei','vier','fuenf','sechs','sieben','acht','neun')
#Neural net
f <- paste(paste(digits, collapse = "+ ")," ~ ",paste(names(mnist_train[1:50]), collapse = " + "))
digits <- c('null', 'eins', 'zwei','drei','vier','fuenf','sechs','sieben','acht','neun')
names(mnist)[52:61] <- digits
#Split dataset
mnist_train <- mnist[1:1000, ]
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
mnist_test_lbl <- mnist_test$label
#Neural net
f <- paste(paste(digits, collapse = "+ "), " ~ ", paste(names(mnist_train[1:50]), collapse = " + "))
mnist_model <- neuralnet(f, data = mnist_train)
plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- model_result$net.result
View(predicted)
predicted <- data_frame(digits,model_result$net.result)
mat <- matrix(model_result$net.result,dimnames=dimnames)
mat <- matrix(model_result$net.result,dimnames=digits)
predicted <- as.data.frame(model_result$net.result)
View(predicted)
names(predicted) <- digits
View(predicted)
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
digits <- c('0', '1', '2','3','4','5','6','7','8','9')
names(mnist)[52:61] <- digits
#Split dataset
mnist_train <- mnist[1:1000, ]
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
mnist_test_lbl <- mnist_test$label
#Neural net
f <- paste(paste(digits, collapse = " + "), " ~ ", paste(names(mnist_train[1:50]), collapse = " + "))
mnist_model <- neuralnet(f, data = mnist_train)
plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- as.data.frame(model_result$net.result)
names(predicted) <- digits
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
digits <- c('null', 'eins', 'zwei','drei','vier','fuenf','sechs','sieben','acht','neun')
names(mnist)[52:61] <- digits
#Split dataset
mnist_train <- mnist[1:1000, ]
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
mnist_test_lbl <- mnist_test$label
#Neural net
f <- paste(paste(digits, collapse = " + "), " ~ ", paste(names(mnist_train[1:50]), collapse = " + "))
mnist_model <- neuralnet(f, data = mnist_train)
plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- as.data.frame(model_result$net.result)
names(predicted) <- digits
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
library(dplyr)
library(neuralnet)
#Load data
setwd("~/Kaggle/MNIST/MNIST-Digit-Recognition/")
mnist <- read.csv("./Data/train.csv")
#PCA
mn_pix <- mnist[, -1]
mn_label <- mnist$label
mn_pca <- prcomp(mn_pix)
mnist <- as.data.frame(mn_pca$x)
mnist <- mnist[, 1:50]
mnist$label <- mn_label
# Binarize the categorical output
for(i in c(0:9)) {
mnist <- cbind(mnist, mnist$label == i)
}
digits <- c('0', '1', '2','3','4','5','6','7','8','9')
names(mnist)[52:61] <- digits
#Split dataset
mnist_train <- mnist[1:1000, ]
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
mnist_test_lbl <- mnist_test$label
#Neural net
f <- paste(paste(digits, collapse = " + "), " ~ ", paste(names(mnist_train[1:50]), collapse = " + "))
mnist_model <- neuralnet(f, data = mnist_train)
plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- as.data.frame(model_result$net.result)
names(predicted) <- digits
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
library(dplyr)
library(neuralnet)
#Load data
setwd("~/Kaggle/MNIST/MNIST-Digit-Recognition/")
mnist <- read.csv("./Data/train.csv")
#PCA
mn_pix <- mnist[, -1]
mn_label <- mnist$label
mn_pca <- prcomp(mn_pix)
mnist <- as.data.frame(mn_pca$x)
mnist <- mnist[, 1:50]
mnist$label <- mn_label
# Binarize the categorical output
for(i in c(0:9)) {
mnist <- cbind(mnist, mnist$label == i)
}
digits <- c('null', 'eins', 'zwei','drei','vier','fuenf','sechs','sieben','acht','neun')
names(mnist)[52:61] <- digits
#Split dataset
mnist_train <- mnist[1:1000, ]
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
mnist_test_lbl <- mnist_test$label
#Neural net
f <- paste(paste(digits, collapse = " + "), " ~ ", paste(names(mnist_train[1:50]), collapse = " + "))
mnist_model <- neuralnet(f, data = mnist_train)
plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- as.data.frame(model_result$net.result)
names(predicted) <- digits
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
digits <- c('i0', 'i1', 'i2','i3','i4','i5','i6','i7','i8','i9')
names(mnist)[52:61] <- digits
#Split dataset
mnist_train <- mnist[1:1000, ]
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
mnist_test_lbl <- mnist_test$label
#Neural net
f <- paste(paste(digits, collapse = " + "), " ~ ", paste(names(mnist_train[1:50]), collapse = " + "))
mnist_model <- neuralnet(f, data = mnist_train)
plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- as.data.frame(model_result$net.result)
names(predicted) <- digits
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
prediction <- sapply(substr(predicted$label,2,2), as.numeric)
prediction <- sapply(substr(predicted$label,2,1), as.numeric)
prediction <- sapply(substr(predicted$label,2,2), as.numeric)
prediction <- substr(predicted$label,2,2)
# Binarize the categorical output
for(i in c(0:9)) {
mnist <- cbind(mnist, mnist$label == i)
}
View(mnist)
sapply(mnist[52:61], as.numeric)
#Split dataset
mnist_train <- mnist[1:1000, ]
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
mnist_test_lbl <- mnist_test$label
#Neural net
f <- paste(paste(digits, collapse = " + "), " ~ ", paste(names(mnist_train[1:50]), collapse = " + "))
mnist_model <- neuralnet(f, data = mnist_train)
plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- as.data.frame(model_result$net.result)
names(predicted) <- digits
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
sapply(mnist[52:61], as.numeric)
mnist[52:61] <- sapply(mnist[52:61], as.numeric)
#Split dataset
mnist_train <- mnist[1:1000, ]
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
mnist_test_lbl <- mnist_test$label
#Neural net
f <- paste(paste(digits, collapse = " + "), " ~ ", paste(names(mnist_train[1:50]), collapse = " + "))
mnist_model <- neuralnet(f, data = mnist_train)
plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- as.data.frame(model_result$net.result)
names(predicted) <- digits
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
View(mnist)
library(dplyr)
library(neuralnet)
#Load data
setwd("~/Kaggle/MNIST/MNIST-Digit-Recognition/")
mnist <- read.csv("./Data/train.csv")
#PCA
mn_pix <- mnist[, -1]
mn_label <- mnist$label
mn_pca <- prcomp(mn_pix)
mnist <- as.data.frame(mn_pca$x)
mnist <- mnist[, 1:50]
mnist$label <- mn_label
# Binarize the categorical output
for(i in c(0:9)) {
mnist <- cbind(mnist, mnist$label == i)
}
digits <- c('i0', 'i1', 'i2','i3','i4','i5','i6','i7','i8','i9')
names(mnist)[52:61] <- digits
mnist[52:61] <- sapply(mnist[52:61], as.numeric)
#Split dataset
mnist_train <- mnist[1:1000, ]
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
mnist_test_lbl <- mnist_test$label
#Neural net
f <- paste(paste(digits, collapse = " + "), " ~ ", paste(names(mnist_train[1:50]), collapse = " + "))
mnist_model <- neuralnet(f, data = mnist_train)
#plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- as.data.frame(model_result$net.result)
names(predicted) <- digits
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
prediction <- substr(predicted$label,2,2)
View(predicted)
prediction <- sapply(substr(predicted$label,2,2), as.numeric)
mnist_train_lbl <- mnist_train$label
cor(prediction,mnist_train_lbl)
mnist_test_lbl <- mnist_test$label
cor(prediction,mnist_test_lbl)
mnist_model <- neuralnet(f, data = mnist_train,hidden = 30)
#plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- as.data.frame(model_result$net.result)
names(predicted) <- digits
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
prediction <- sapply(substr(predicted$label,2,2), as.numeric)
cor(prediction,mnist_test_lbl)
#Split dataset
mnist_train <- mnist[1:10000, ]
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
mnist_test_lbl <- mnist_test$label
#Neural net
f <- paste(paste(digits, collapse = " + "), " ~ ", paste(names(mnist_train[1:50]), collapse = " + "))
mnist_model <- neuralnet(f, data = mnist_train,hidden = 30)
#Split dataset
mnist_train <- mnist[1:2000, ]
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
mnist_test_lbl <- mnist_test$label
#Neural net
f <- paste(paste(digits, collapse = " + "), " ~ ", paste(names(mnist_train[1:50]), collapse = " + "))
mnist_model <- neuralnet(f, data = mnist_train,hidden = 30)
#plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- as.data.frame(model_result$net.result)
names(predicted) <- digits
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
prediction <- sapply(substr(predicted$label,2,2), as.numeric)
result <- data.frame()
result$prediction <- sapply(substr(predicted$label,2,2), as.numeric)
result <- data.frame(c("prediction","digit","check"))
result$prediction <- sapply(substr(predicted$label,2,2), as.numeric)
result$digit <- mnist_test_lbl
result <- data.frame(prediction,digit,check))
result <- data.frame(prediction,digit,check)
result <- data.frame(prediction,digits,check)
result <- data.frame(prediction,digits)
result$check <- ifelse(result$prediction == result$digit,"1","0")
table(result$check)
View(result)
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
#plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- as.data.frame(model_result$net.result)
names(predicted) <- digits
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
prediction <- sapply(substr(predicted$label,2,2), as.numeric)
result <- data.frame(prediction,mnist_test_lbl)
result$check <- ifelse(result$prediction == result$mnist_test_lbl,"1","0")
table(result$check)
mnist_model <- neuralnet(f, data = mnist_train,hidden = 50)
#plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- as.data.frame(model_result$net.result)
names(predicted) <- digits
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
prediction <- sapply(substr(predicted$label,2,2), as.numeric)
result <- data.frame(prediction,mnist_test_lbl)
result$check <- ifelse(result$prediction == result$mnist_test_lbl,"1","0")
table(result$check)
mnist_model <- neuralnet(f, data = mnist_train,hidden = 70)
#plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- as.data.frame(model_result$net.result)
names(predicted) <- digits
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
prediction <- sapply(substr(predicted$label,2,2), as.numeric)
result <- data.frame(prediction,mnist_test_lbl)
result$check <- ifelse(result$prediction == result$mnist_test_lbl,"1","0")
table(result$check)
table(result$check,result$mnist_test_lbl)
plot(mn_pca, type = "l")
plot(mn_pca)
, type = "l"
plot(mn_pca, type = "l")
mnist <- as.data.frame(mn_pca$x)
mnist <- mnist[, 1:10]
mnist$label <- mn_label
# Binarize the categorical output
for(i in c(0:9)) {
mnist <- cbind(mnist, mnist$label == i)
}
digits <- c('i0', 'i1', 'i2','i3','i4','i5','i6','i7','i8','i9')
names(mnist)[52:61] <- digits
mnist[52:61] <- sapply(mnist[52:61], as.numeric)
#Split dataset
mnist_train <- mnist[1:10000, ]
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
mnist_test_lbl <- mnist_test$label
#Neural net
f <- paste(paste(digits, collapse = " + "), " ~ ", paste(names(mnist_train[1:50]), collapse = " + "))
mnist_model <- neuralnet(f, data = mnist_train,hidden = 70)
#plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:50])
predicted <- as.data.frame(model_result$net.result)
names(predicted) <- digits
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
prediction <- sapply(substr(predicted$label,2,2), as.numeric)
result <- data.frame(prediction,mnist_test_lbl)
result$check <- ifelse(result$prediction == result$mnist_test_lbl,"1","0")
table(result$check)
table(result$check,result$mnist_test_lbl)
mnist <- as.data.frame(mn_pca$x)
mnist <- mnist[, 1:10]
mnist$label <- mn_label
# Binarize the categorical output
for(i in c(0:9)) {
mnist <- cbind(mnist, mnist$label == i)
}
digits <- c('i0', 'i1', 'i2','i3','i4','i5','i6','i7','i8','i9')
names(mnist)[52:61] <- digits
mnist[52:61] <- sapply(mnist[52:61], as.numeric)
#Split dataset
mnist_train <- mnist[1:10000, ]
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
mnist_test_lbl <- mnist_test$label
#Neural net
f <- paste(paste(digits, collapse = " + "), " ~ ", paste(names(mnist_train[1:10]), collapse = " + "))
mnist_model <- neuralnet(f, data = mnist_train,hidden = 70)
#plot(mnist_model)
model_result <- compute(mnist_model, mnist_test[1:10])
predicted <- as.data.frame(model_result$net.result)
names(predicted) <- digits
predicted$label <- colnames(predicted)[apply(predicted,1,which.max)]
prediction <- sapply(substr(predicted$label,2,2), as.numeric)
result <- data.frame(prediction,mnist_test_lbl)
result$check <- ifelse(result$prediction == result$mnist_test_lbl,"1","0")
table(result$check)
table(result$check,result$mnist_test_lbl)
mnist <- as.data.frame(mn_pca$x)
mnist <- mnist[, 1:10]
mnist$label <- mn_label
# Binarize the categorical output
for(i in c(0:9)) {
mnist <- cbind(mnist, mnist$label == i)
}
digits <- c('i0', 'i1', 'i2','i3','i4','i5','i6','i7','i8','i9')
names(mnist)[12:21] <- digits
mnist[12:21] <- sapply(mnist[12:21], as.numeric)
#Split dataset
mnist_train <- mnist[1:10000, ]
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
mnist_test_lbl <- mnist_test$label
#Neural net
f <- paste(paste(digits, collapse = " + "), " ~ ", paste(names(mnist_train[1:10]), collapse = " + "))
mnist_model <- neuralnet(f, data = mnist_train,hidden = 70)
#Split dataset
mnist_train <- mnist[1:2000, ]
mnist_train_lbl <- mnist_train$label
mnist_test <- mnist[21001:42000, ]
mnist_test_lbl <- mnist_test$label
#Neural net
f <- paste(paste(digits, collapse = " + "), " ~ ", paste(names(mnist_train[1:10]), collapse = " + "))
mnist_model <- neuralnet(f, data = mnist_train,hidden = 70)
library(kernlab)
library(dplyr)
#Load data
setwd("~/Kaggle/MNIST/MNIST-Digit-Recognition/")
mnist_train <- read.csv("./Data/train.csv")
mnist_train$set <- "train"
mnist_train$label <- factor(mnist_train$label)
mnist_test <- read.csv("./Data/test.csv")
mnist_test$set <- "test"
mnist <- rbind(mnist_train, mnist_test)
View(mnist_test)
mnist <- rbind(mnist_train[,2:786], mnist_test)
mn_pix <- mnist[, -785]
mn_pca <- prcomp(mn_pix)
mn_pca <- as.data.frame(mn_pca$x)
mn_pca$set <- mnist$set
plot(mn_pca, type = "l")
mnist_test <- mn_pca[which(mn_pca$set == "test"),1:10]
mnist_train <- mn_pca[which(mn_pca$set == "train"),1:10]
mnist_train <- read.csv("./Data/train.csv")
mnist_train$set <- "train"
mnist_train$label <- factor(mnist_train$label)
mnist_train_lbl <- mnist_train$label
mnist_train <- mn_pca[which(mn_pca$set == "train"),1:10]
mnist_train$label <- mnist_train_lbl
#Train SVM
mnist_class <- ksvm(label ~ ., data = mnist_train, kernel = "rbfdot")
#Classify test dataset
mnist_pred <- predict(mnist_class, mnist_test)
#Save predictions
result <- data.frame(Label = mnist_pred)
result <- mutate(result, ImageId = rownames(result))
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
mnist_test <- mn_pca[which(mn_pca$set == "test"),1:30]
mnist_train <- mn_pca[which(mn_pca$set == "train"),1:30]
mnist_train$label <- mnist_train_lbl
#Train SVM
mnist_class <- ksvm(label ~ ., data = mnist_train, kernel = "rbfdot")
#Classify test dataset
mnist_pred <- predict(mnist_class, mnist_test)
#Save predictions
result <- data.frame(Label = mnist_pred)
result <- mutate(result, ImageId = rownames(result))
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
mnist_test <- mn_pca[which(mn_pca$set == "test"),1:50]
mnist_train <- mn_pca[which(mn_pca$set == "train"),1:50]
mnist_train$label <- mnist_train_lbl
#Train SVM
mnist_class <- ksvm(label ~ ., data = mnist_train, kernel = "rbfdot")
#Classify test dataset
mnist_pred <- predict(mnist_class, mnist_test)
#Save predictions
result <- data.frame(Label = mnist_pred)
result <- mutate(result, ImageId = rownames(result))
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
mnist_test <- mn_pca[which(mn_pca$set == "test"),1:70]
mnist_train <- mn_pca[which(mn_pca$set == "train"),1:70]
mnist_train$label <- mnist_train_lbl
#Train SVM
mnist_class <- ksvm(label ~ ., data = mnist_train, kernel = "rbfdot")
#Classify test dataset
mnist_pred <- predict(mnist_class, mnist_test)
#Save predictions
result <- data.frame(Label = mnist_pred)
result <- mutate(result, ImageId = rownames(result))
write.csv(result,file = "./Data/prediction.csv", row.names = FALSE)
